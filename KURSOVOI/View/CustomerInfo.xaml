<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KURSOVOI.Model"
        xmlns:ms="http://namespaces.mindscape.co.nz/wpf" x:Class="KURSOVOI.View.CustomerInfo"
        mc:Ignorable="d"
        Icon="../Resourse/customer.ico"
       Title="CustomerInfo" Height="452" Width="969"  Foreground="White" WindowStyle="ThreeDBorderWindow" FontFamily="Century Gothic" FontSize="14" Cursor="Hand" Loaded="Window_Loaded" Background="Black" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type local:customer}, CreateList=True}"/>
    </Window.Resources>

    <Grid Margin="0,10,2,-1">
        <Grid.RowDefinitions>

            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150*"/>
            <ColumnDefinition Width="265"/>
            <ColumnDefinition Width="197*"/>
        </Grid.ColumnDefinitions>


        <Menu Opacity="50" FontSize="20"  Background="Black" Margin="320,69,0,69" BorderBrush="WhiteSmoke" BorderThickness="2" Grid.Column="2" Grid.RowSpan="2">
            <Button Content="Push" BorderBrush="Black"  BorderThickness="6"  Foreground="WhiteSmoke" Click="Push_Click" Height="30" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" Width="42" >
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0.517"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value=" Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="IndianRed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Exit"   BorderThickness="6"  Foreground="WhiteSmoke" Click="Exit_Click" Width="40" BorderBrush="Black">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="IndianRed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Photo" BorderBrush="Black"  BorderThickness="6"  Foreground="WhiteSmoke" Click="Photo_Click" Width="54" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="IndianRed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Menu>


        <TextBlock Grid.ColumnSpan="3" Text="CUSTOMER INFORMATION" Foreground="Black" TextAlignment="Center" VerticalAlignment="Center"  FontFamily="Century Gothic" FontSize="18" Margin="0,43,0,73" Background="Bisque" Height="21"/>

        <Grid x:Name="grid1" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="39,63,0,0" Grid.Row="2" VerticalAlignment="Top" Width="191" Grid.Column="1" Height="33">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Adress:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="adressTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="1,5,0,5" Grid.Row="0" Text="{Binding adress, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="119"/>
        </Grid>
        <Grid x:Name="grid2" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="45,23,0,0" Grid.Row="2" VerticalAlignment="Top" Width="220" Height="31">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Birth Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="0,-4,0,8" Grid.Row="0" VerticalAlignment="Bottom" Foreground="WhiteSmoke"/>
            <DatePicker x:Name="birthDateDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="24,-4,-12,10" Grid.Row="0" SelectedDate="{Binding birthDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="115"/>
        </Grid>
        <Grid x:Name="grid3" Grid.Column="1" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="30,56,0,0" Grid.Row="1" VerticalAlignment="Top" Height="33" Width="200">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Country:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <ComboBox x:Name="countryComboBox" Grid.Column="1" DisplayMemberPath="country" HorizontalAlignment="Left" Height="Auto" Margin="3" Grid.Row="0" VerticalAlignment="Center" Width="120">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <ComboBoxItem Content="Belarus" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="118"/>
                <ComboBoxItem Content="Ukraine" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="118"/>
            </ComboBox>
        </Grid>
        <Grid x:Name="grid4" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="45,56,0,0" Grid.Row="1" VerticalAlignment="Top" Width="220" Height="33">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="customerFirstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="25" Margin="10,5,-6,3" Grid.Row="0" Text="{Binding customerFirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="119"/>
        </Grid>
        <Grid x:Name="grid5" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="49,10,0,0" Grid.Row="1" VerticalAlignment="Top" Height="33" Width="208">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="customerLastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="25" Margin="10,3,-12,5" Grid.Row="0" Text="{Binding customerLastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="118"/>
        </Grid>
        <Grid x:Name="grid6" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="45,64,0,0" Grid.Row="2" VerticalAlignment="Top" Height="33" Width="212">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Phone Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="-11,0,0,6" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="phoneNumberTextBox" HorizontalAlignment="Left" Height="23" Margin="105,4,-10,6" Grid.Row="0" Text="{Binding phoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="117" Grid.ColumnSpan="2"/>
        </Grid>
        <Grid x:Name="grid7" Grid.Column="2" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="31,15,0,0" Grid.Row="2" VerticalAlignment="Top" Height="81" Width="199">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Photo:" HorizontalAlignment="Left" Margin="-16,-19,-125,-6" Grid.Row="0" VerticalAlignment="Center" Height="68" Width="189" Grid.ColumnSpan="2" Foreground="WhiteSmoke"/>
            <Image x:Name="photoImage" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="0" Source="{Binding photo}" VerticalAlignment="Center"/>
        </Grid>
        <Grid x:Name="grid8" Grid.Column="2" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="10,8,0,0" Grid.Row="1" VerticalAlignment="Top" Width="220" Height="33">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Postal Code:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="postalCodeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3,0,-19,5" Grid.Row="0" Text="{Binding postalCode, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Bottom" Width="103" />
        </Grid>
        <Grid x:Name="grid9" Grid.Column="2" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="85,46,0,0" Grid.Row="1" VerticalAlignment="Top" Width="145" Height="33">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="sex:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <ComboBox x:Name="sexComboBox" DisplayMemberPath="sex" HorizontalAlignment="Left" Height="Auto" Margin="38,7,0,3" Grid.Row="0" VerticalAlignment="Center" Width="97" Grid.ColumnSpan="2">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <ComboBoxItem Content="female" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="118"/>
                <ComboBoxItem Content="male" HorizontalAlignment="Left" Height="21" VerticalAlignment="Top" Width="118"/>
            </ComboBox>
        </Grid>
        <Grid x:Name="grid10" Grid.Column="1" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="49,8,0,0" Grid.Row="1" VerticalAlignment="Top" Height="33" Width="181">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="State:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="stateTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding state, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
        </Grid>
        <Grid x:Name="grid11" Grid.Column="1" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="53,16,0,0" Grid.Row="2" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Height="33" Width="172">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="0.088"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="City:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" Foreground="WhiteSmoke"/>
            <TextBox x:Name="cityTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="10,10,0,0" Grid.Row="0" Text="{Binding city, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="116"/>
        </Grid>

        <Menu Opacity="50" FontSize="20"  Background="Black" Grid.ColumnSpan="3" Margin="0,0,0,101" BorderBrush="WhiteSmoke" BorderThickness="2">
            <Button Grid.Row="0" Content="Product" BorderBrush="Black"  BorderThickness="6"  Foreground="WhiteSmoke" Click="Product_Click" Width="90" >
                <Button.Style >
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="IndianRed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Row="3" Content="Declaration" BorderBrush="Black"  BorderThickness="6"  Foreground="WhiteSmoke" Click="Declaration_Click" Grid.Column="2" Height="26" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="IndianRed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>


        </Menu>
    </Grid>
</Window>
